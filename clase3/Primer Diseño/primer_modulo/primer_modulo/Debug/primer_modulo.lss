
primer_modulo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002ae  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002ae  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000060  00000000  00000000  000002dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000edb  00000000  00000000  0000033d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000007a8  00000000  00000000  00001218  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003e5  00000000  00000000  000019c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000a4  00000000  00000000  00001da8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000022d  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000025c  00000000  00000000  00002079  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  000022d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000256  00000256  000002aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002318  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.set_action_lcd 00000028  000001e6  000001e6  0000023a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.init_lcd 00000064  0000014e  0000014e  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.send_char 00000034  000001b2  000001b2  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.goToXY  00000014  00000242  00000242  00000296  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.write_string 0000001a  0000020e  0000020e  00000262  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .progmemx.data 0000000a  000000bc  000000bc  00000110  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 19 .text.main    00000088  000000c6  000000c6  0000011a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.libgcc  0000001a  00000228  00000228  0000027c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
   8:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
   c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  10:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  14:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  18:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  1c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  20:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  24:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  28:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  2c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  30:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  34:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  38:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  3c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  40:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  44:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  48:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  4c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  50:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  54:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  58:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  5c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  60:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>
  64:	0c 94 2b 01 	jmp	0x256	; 0x256 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	e8 e6       	ldi	r30, 0x68	; 104
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	40 e0       	ldi	r20, 0x00	; 0
  7a:	17 c0       	rjmp	.+46     	; 0xaa <__do_clear_bss+0x8>
  7c:	b5 91       	lpm	r27, Z+
  7e:	a5 91       	lpm	r26, Z+
  80:	35 91       	lpm	r19, Z+
  82:	25 91       	lpm	r18, Z+
  84:	05 91       	lpm	r16, Z+
  86:	07 fd       	sbrc	r16, 7
  88:	0c c0       	rjmp	.+24     	; 0xa2 <__do_clear_bss>
  8a:	95 91       	lpm	r25, Z+
  8c:	85 91       	lpm	r24, Z+
  8e:	ef 01       	movw	r28, r30
  90:	f9 2f       	mov	r31, r25
  92:	e8 2f       	mov	r30, r24
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0x20>
  9e:	fe 01       	movw	r30, r28
  a0:	04 c0       	rjmp	.+8      	; 0xaa <__do_clear_bss+0x8>

000000a2 <__do_clear_bss>:
  a2:	1d 92       	st	X+, r1
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	e1 f7       	brne	.-8      	; 0xa2 <__do_clear_bss>
  aa:	e8 36       	cpi	r30, 0x68	; 104
  ac:	f4 07       	cpc	r31, r20
  ae:	31 f7       	brne	.-52     	; 0x7c <__do_copy_data+0x8>
  b0:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  b4:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <_exit>

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>

Disassembly of section .text:

00000256 <__bad_interrupt>:
 256:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.set_action_lcd:

000001e6 <set_action_lcd>:
	set_action_lcd(SET_FUNCTIONS);

} 

void set_action_lcd (uint8_t action) {
	SET_VALUE_PORT(B,action);
 1e6:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e8:	83 ec       	ldi	r24, 0xC3	; 195
 1ea:	99 e0       	ldi	r25, 0x09	; 9
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <set_action_lcd+0x6>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <set_action_lcd+0xc>
 1f2:	00 00       	nop
	_delay_ms(LONG_AWAIT);
	H_PIN(C,EN);
 1f4:	88 b1       	in	r24, 0x08	; 8
 1f6:	84 60       	ori	r24, 0x04	; 4
 1f8:	88 b9       	out	0x08, r24	; 8
 1fa:	81 ee       	ldi	r24, 0xE1	; 225
 1fc:	94 e0       	ldi	r25, 0x04	; 4
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <set_action_lcd+0x18>
 202:	00 c0       	rjmp	.+0      	; 0x204 <set_action_lcd+0x1e>
 204:	00 00       	nop
	_delay_ms(SHORT_AWAIT);
	L_PIN(C,EN);
 206:	88 b1       	in	r24, 0x08	; 8
 208:	8b 7f       	andi	r24, 0xFB	; 251
 20a:	88 b9       	out	0x08, r24	; 8
 20c:	08 95       	ret

Disassembly of section .text.init_lcd:

0000014e <init_lcd>:
 */ 
#include "lcd.h"
#include <util/delay.h>
#include "../../firmware/ports/ports.h"
void init_lcd(){
	OUTPUT_MODE(B,D7);
 14e:	84 b1       	in	r24, 0x04	; 4
 150:	81 60       	ori	r24, 0x01	; 1
 152:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D8);
 154:	84 b1       	in	r24, 0x04	; 4
 156:	82 60       	ori	r24, 0x02	; 2
 158:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D9);
 15a:	84 b1       	in	r24, 0x04	; 4
 15c:	84 60       	ori	r24, 0x04	; 4
 15e:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D10);
 160:	84 b1       	in	r24, 0x04	; 4
 162:	88 60       	ori	r24, 0x08	; 8
 164:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D11);
 166:	84 b1       	in	r24, 0x04	; 4
 168:	80 61       	ori	r24, 0x10	; 16
 16a:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D12);
 16c:	84 b1       	in	r24, 0x04	; 4
 16e:	80 62       	ori	r24, 0x20	; 32
 170:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D13);
 172:	84 b1       	in	r24, 0x04	; 4
 174:	80 64       	ori	r24, 0x40	; 64
 176:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D14);
 178:	84 b1       	in	r24, 0x04	; 4
 17a:	80 68       	ori	r24, 0x80	; 128
 17c:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(C,RS);
 17e:	87 b1       	in	r24, 0x07	; 7
 180:	81 60       	ori	r24, 0x01	; 1
 182:	87 b9       	out	0x07, r24	; 7
	OUTPUT_MODE(C,RW);
 184:	87 b1       	in	r24, 0x07	; 7
 186:	82 60       	ori	r24, 0x02	; 2
 188:	87 b9       	out	0x07, r24	; 7
	OUTPUT_MODE(C,EN);
 18a:	87 b1       	in	r24, 0x07	; 7
 18c:	84 60       	ori	r24, 0x04	; 4
 18e:	87 b9       	out	0x07, r24	; 7
	SET_VALUE_PORT(B,0);
 190:	15 b8       	out	0x05, r1	; 5
	L_PIN(C,RS);
 192:	88 b1       	in	r24, 0x08	; 8
 194:	8e 7f       	andi	r24, 0xFE	; 254
 196:	88 b9       	out	0x08, r24	; 8
	L_PIN(C,RW);
 198:	88 b1       	in	r24, 0x08	; 8
 19a:	8d 7f       	andi	r24, 0xFD	; 253
 19c:	88 b9       	out	0x08, r24	; 8
	L_PIN(C,EN);
 19e:	88 b1       	in	r24, 0x08	; 8
 1a0:	8b 7f       	andi	r24, 0xFB	; 251
 1a2:	88 b9       	out	0x08, r24	; 8
	set_action_lcd(ON_DISPLAY);
 1a4:	8f e0       	ldi	r24, 0x0F	; 15
 1a6:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
	set_action_lcd(SET_FUNCTIONS);
 1aa:	88 e3       	ldi	r24, 0x38	; 56
 1ac:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
 1b0:	08 95       	ret

Disassembly of section .text.send_char:

000001b2 <send_char>:
	_delay_ms(SHORT_AWAIT);
	L_PIN(C,EN);
}

void send_char(char caracter){
	H_PIN(C,RS);
 1b2:	98 b1       	in	r25, 0x08	; 8
 1b4:	91 60       	ori	r25, 0x01	; 1
 1b6:	98 b9       	out	0x08, r25	; 8
	SET_VALUE_PORT(B,caracter);
 1b8:	85 b9       	out	0x05, r24	; 5
 1ba:	83 ec       	ldi	r24, 0xC3	; 195
 1bc:	99 e0       	ldi	r25, 0x09	; 9
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <send_char+0xc>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <send_char+0x12>
 1c4:	00 00       	nop
	_delay_ms(LONG_AWAIT);
	H_PIN(C,EN);
 1c6:	88 b1       	in	r24, 0x08	; 8
 1c8:	84 60       	ori	r24, 0x04	; 4
 1ca:	88 b9       	out	0x08, r24	; 8
 1cc:	81 ee       	ldi	r24, 0xE1	; 225
 1ce:	94 e0       	ldi	r25, 0x04	; 4
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <send_char+0x1e>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <send_char+0x24>
 1d6:	00 00       	nop
	_delay_ms(SHORT_AWAIT);
	L_PIN(C,EN);
 1d8:	88 b1       	in	r24, 0x08	; 8
 1da:	8b 7f       	andi	r24, 0xFB	; 251
 1dc:	88 b9       	out	0x08, r24	; 8
	L_PIN(C,RS);
 1de:	88 b1       	in	r24, 0x08	; 8
 1e0:	8e 7f       	andi	r24, 0xFE	; 254
 1e2:	88 b9       	out	0x08, r24	; 8
 1e4:	08 95       	ret

Disassembly of section .text.goToXY:

00000242 <goToXY>:
}
void goToXY(int x, int y){
	set_action_lcd((y==2)*0x40+0x80+x);
 242:	62 30       	cpi	r22, 0x02	; 2
 244:	71 05       	cpc	r23, r1
 246:	11 f4       	brne	.+4      	; 0x24c <goToXY+0xa>
 248:	90 ec       	ldi	r25, 0xC0	; 192
 24a:	01 c0       	rjmp	.+2      	; 0x24e <goToXY+0xc>
 24c:	90 e8       	ldi	r25, 0x80	; 128
 24e:	89 0f       	add	r24, r25
 250:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
 254:	08 95       	ret

Disassembly of section .text.write_string:

0000020e <write_string>:
}

void write_string(char * buf){
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	ec 01       	movw	r28, r24
	while(*buf !='\0'){
 214:	03 c0       	rjmp	.+6      	; 0x21c <write_string+0xe>
		send_char(*(buf++));
 216:	21 96       	adiw	r28, 0x01	; 1
 218:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <send_char>
void goToXY(int x, int y){
	set_action_lcd((y==2)*0x40+0x80+x);
}

void write_string(char * buf){
	while(*buf !='\0'){
 21c:	88 81       	ld	r24, Y
 21e:	81 11       	cpse	r24, r1
 220:	fa cf       	rjmp	.-12     	; 0x216 <write_string+0x8>
		send_char(*(buf++));
	}
}
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

Disassembly of section .text.main:

000000c6 <main>:

int x = SET_INIT_ADDRESS_FIRST_ROW;
int y = 1;
char *buf;
int main(void)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	2a 97       	sbiw	r28, 0x0a	; 10
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	f8 94       	cli
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	cd bf       	out	0x3d, r28	; 61
	init_lcd();
  da:	0e 94 a7 00 	call	0x14e	; 0x14e <init_lcd>
	set_action_lcd(SHIFT_RIGTH);
  de:	8c e1       	ldi	r24, 0x1C	; 28
  e0:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
	set_action_lcd(SHIFT_RIGTH);
  e4:	8c e1       	ldi	r24, 0x1C	; 28
  e6:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
	set_action_lcd(SHIFT_RIGTH);
  ea:	8c e1       	ldi	r24, 0x1C	; 28
  ec:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
	set_action_lcd(SHIFT_RIGTH);
  f0:	8c e1       	ldi	r24, 0x1C	; 28
  f2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
	set_action_lcd(RETURN_HOME);
  f6:	82 e0       	ldi	r24, 0x02	; 2
  f8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <set_action_lcd>
	goToXY(4,1);
  fc:	61 e0       	ldi	r22, 0x01	; 1
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 21 01 	call	0x242	; 0x242 <goToXY>
	char hola[] = "HOLA";
 108:	2c eb       	ldi	r18, 0xBC	; 188
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	40 e0       	ldi	r20, 0x00	; 0
 10e:	85 e0       	ldi	r24, 0x05	; 5
 110:	f9 01       	movw	r30, r18
 112:	de 01       	movw	r26, r28
 114:	11 96       	adiw	r26, 0x01	; 1
 116:	74 2f       	mov	r23, r20
 118:	0e 94 14 01 	call	0x228	; 0x228 <__movmemx_qi>
    write_string(hola);
 11c:	ce 01       	movw	r24, r28
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	0e 94 07 01 	call	0x20e	; 0x20e <write_string>
	goToXY(16,2);
 124:	62 e0       	ldi	r22, 0x02	; 2
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	80 e1       	ldi	r24, 0x10	; 16
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 21 01 	call	0x242	; 0x242 <goToXY>
	char fiee[] = "FIEE";
 130:	21 ec       	ldi	r18, 0xC1	; 193
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	85 e0       	ldi	r24, 0x05	; 5
 138:	f9 01       	movw	r30, r18
 13a:	de 01       	movw	r26, r28
 13c:	16 96       	adiw	r26, 0x06	; 6
 13e:	74 2f       	mov	r23, r20
 140:	0e 94 14 01 	call	0x228	; 0x228 <__movmemx_qi>
	write_string(fiee);
 144:	ce 01       	movw	r24, r28
 146:	06 96       	adiw	r24, 0x06	; 6
 148:	0e 94 07 01 	call	0x20e	; 0x20e <write_string>
 14c:	ff cf       	rjmp	.-2      	; 0x14c <main+0x86>

Disassembly of section .text.libgcc:

00000228 <__movmemx_qi>:
 228:	99 27       	eor	r25, r25

0000022a <__movmemx_hi>:
 22a:	77 fd       	sbrc	r23, 7
 22c:	05 c0       	rjmp	.+10     	; 0x238 <__movmemx_hi+0xe>
 22e:	05 90       	lpm	r0, Z+
 230:	0d 92       	st	X+, r0
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	e1 f7       	brne	.-8      	; 0x22e <__movmemx_hi+0x4>
 236:	08 95       	ret
 238:	01 90       	ld	r0, Z+
 23a:	0d 92       	st	X+, r0
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	e1 f7       	brne	.-8      	; 0x238 <__movmemx_hi+0xe>
 240:	08 95       	ret
