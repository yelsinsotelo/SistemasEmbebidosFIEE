
primer_modulo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018e  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000048  00000000  00000000  000001bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000d26  00000000  00000000  00000205  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000795  00000000  00000000  00000f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003cb  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000058  00000000  00000000  00001a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000220  00000000  00000000  00001ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000101  00000000  00000000  00001d04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  00001e05  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000136  00000136  0000018a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e30  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.init_lcd 00000058  00000080  00000080  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.set_action_lcd 00000028  0000010e  0000010e  00000162  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    00000036  000000d8  000000d8  0000012c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
   8:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
   c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  10:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  14:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  18:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  1c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  20:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  24:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  28:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  2c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  30:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  34:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  38:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  3c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  40:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  44:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  48:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  4c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  50:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  54:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  58:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  5c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  60:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  64:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6c 00 	call	0xd8	; 0xd8 <main>
  78:	0c 94 3e 00 	jmp	0x7c	; 0x7c <_exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

00000136 <__bad_interrupt>:
 136:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.init_lcd:

00000080 <init_lcd>:
 */ 
#include "lcd.h"
#include <util/delay.h>
#include "../../firmware/ports/ports.h"
void init_lcd(){
	OUTPUT_MODE(B,D7);
  80:	84 b1       	in	r24, 0x04	; 4
  82:	81 60       	ori	r24, 0x01	; 1
  84:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D8);
  86:	84 b1       	in	r24, 0x04	; 4
  88:	82 60       	ori	r24, 0x02	; 2
  8a:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D9);
  8c:	84 b1       	in	r24, 0x04	; 4
  8e:	84 60       	ori	r24, 0x04	; 4
  90:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D10);
  92:	84 b1       	in	r24, 0x04	; 4
  94:	88 60       	ori	r24, 0x08	; 8
  96:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D11);
  98:	84 b1       	in	r24, 0x04	; 4
  9a:	80 61       	ori	r24, 0x10	; 16
  9c:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D12);
  9e:	84 b1       	in	r24, 0x04	; 4
  a0:	80 62       	ori	r24, 0x20	; 32
  a2:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D13);
  a4:	84 b1       	in	r24, 0x04	; 4
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(B,D14);
  aa:	84 b1       	in	r24, 0x04	; 4
  ac:	80 68       	ori	r24, 0x80	; 128
  ae:	84 b9       	out	0x04, r24	; 4
	OUTPUT_MODE(C,RS);
  b0:	87 b1       	in	r24, 0x07	; 7
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	87 b9       	out	0x07, r24	; 7
	OUTPUT_MODE(C,RW);
  b6:	87 b1       	in	r24, 0x07	; 7
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	87 b9       	out	0x07, r24	; 7
	OUTPUT_MODE(C,EN);
  bc:	87 b1       	in	r24, 0x07	; 7
  be:	84 60       	ori	r24, 0x04	; 4
  c0:	87 b9       	out	0x07, r24	; 7
	SET_VALUE_PORT(B,0);
  c2:	15 b8       	out	0x05, r1	; 5
	L_PIN(C,RS);
  c4:	88 b1       	in	r24, 0x08	; 8
  c6:	8e 7f       	andi	r24, 0xFE	; 254
  c8:	88 b9       	out	0x08, r24	; 8
	L_PIN(C,RW);
  ca:	88 b1       	in	r24, 0x08	; 8
  cc:	8d 7f       	andi	r24, 0xFD	; 253
  ce:	88 b9       	out	0x08, r24	; 8
	L_PIN(C,EN);
  d0:	88 b1       	in	r24, 0x08	; 8
  d2:	8b 7f       	andi	r24, 0xFB	; 251
  d4:	88 b9       	out	0x08, r24	; 8
  d6:	08 95       	ret

Disassembly of section .text.set_action_lcd:

0000010e <set_action_lcd>:
} 

void set_action_lcd (uint8_t action) {
	SET_VALUE_PORT(B,action);
 10e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 110:	83 ec       	ldi	r24, 0xC3	; 195
 112:	99 e0       	ldi	r25, 0x09	; 9
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <set_action_lcd+0x6>
 118:	00 c0       	rjmp	.+0      	; 0x11a <set_action_lcd+0xc>
 11a:	00 00       	nop
	_delay_ms(LONG_AWAIT);
	H_PIN(C,EN);
 11c:	88 b1       	in	r24, 0x08	; 8
 11e:	84 60       	ori	r24, 0x04	; 4
 120:	88 b9       	out	0x08, r24	; 8
 122:	81 ee       	ldi	r24, 0xE1	; 225
 124:	94 e0       	ldi	r25, 0x04	; 4
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <set_action_lcd+0x18>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <set_action_lcd+0x1e>
 12c:	00 00       	nop
	_delay_ms(SHORT_AWAIT);
	L_PIN(C,EN);
 12e:	88 b1       	in	r24, 0x08	; 8
 130:	8b 7f       	andi	r24, 0xFB	; 251
 132:	88 b9       	out	0x08, r24	; 8
 134:	08 95       	ret

Disassembly of section .text.main:

000000d8 <main>:
#include <avr/delay.h>
#include "firmware/ports/ports.h"
#include "extanal_devices/lcd/lcd.h"
int main(void)
{
	init_lcd();
  d8:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
    while(1)
    {
		set_action_lcd(ON_DISPLAY);
  dc:	8f e0       	ldi	r24, 0x0F	; 15
  de:	0e 94 87 00 	call	0x10e	; 0x10e <set_action_lcd>
  e2:	2f e3       	ldi	r18, 0x3F	; 63
  e4:	82 e4       	ldi	r24, 0x42	; 66
  e6:	9f e0       	ldi	r25, 0x0F	; 15
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x10>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x1a>
  f2:	00 00       	nop
		_delay_ms(5000);
		set_action_lcd(OFF_DISPLAY);
  f4:	88 e0       	ldi	r24, 0x08	; 8
  f6:	0e 94 87 00 	call	0x10e	; 0x10e <set_action_lcd>
  fa:	2f e3       	ldi	r18, 0x3F	; 63
  fc:	82 e4       	ldi	r24, 0x42	; 66
  fe:	9f e0       	ldi	r25, 0x0F	; 15
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x28>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x32>
 10a:	00 00       	nop
 10c:	e7 cf       	rjmp	.-50     	; 0xdc <main+0x4>
